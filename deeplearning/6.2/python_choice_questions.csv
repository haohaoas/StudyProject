题目,A,B,C,D,答案,类型,参考答案,代码内容,标准输出
Python三元表达式的写法是？,a if 条件 else b,if a b c,b if a else c,c if b else a,A,choice,,,
lambda表达式的作用是？,用于定义匿名函数,进行文件操作,实现继承,用于并发处理,A,choice,,,
Python如何表示复数？,1+2j,1+2i,"complex(2,1)",1+2k,A,choice,,,
Python中可变类型有哪些？,列表/字典/集合,字符串/元组,整数/浮点数,布尔类型,A,choice,,,
列表和元组的区别？,列表可变、元组不可变,元组可变、列表不可变,都不可变,都可变,A,choice,,,
以下哪个不是Python的关键字？,lambda,def,fun,for,C,choice,,,
字典的元素通过什么方式访问？,键,下标,切片,索引,A,choice,,,
如何定义匿名函数？,lambda 参数: 表达式,def 函数名():,function(){},define (),A,choice,,,
深拷贝和浅拷贝的主要区别是？,深拷贝递归复制对象，浅拷贝只复制引用,浅拷贝递归复制，深拷贝只复制引用,没有区别,Python不支持拷贝,A,choice,,,
Python字符串是否可变？,不可变,可变,只读时可变,只有数字可变,A,choice,,,
以下哪一个方法可以向列表添加元素？,append(),add(),push(),insert(),A,choice,,,
如何用一行代码生成从1到10的列表？,"list(range(1,11))",range(10),[1..10],newlist(1-10),A,choice,,,
Python的字典用什么符号包围？,{},[],(),<>,A,choice,,,
如何遍历一个字典的所有key？,for k in dict.keys(),for v in dict.values(),for i in dict,"for k, v in dict.items()",A,choice,,,
下列哪个语句用于处理异常？,try...except,if...else,while...break,with...as,A,choice,,,
什么是lambda表达式？,,,,,,concept,lambda表达式是一种用于创建匿名函数的表达式，常用于需要临时小函数的场景,,
简述Python中的装饰器作用,,,,,,concept,装饰器用于在不修改原函数代码的情况下增加函数功能,,
编写程序在D盘根目录下创建⼀个⽂本⽂件test.txt，并向其中写入字符串hello world,,,,,,code,"fp = open(r'D:\\test.txt', 'a+')\nprint('hello world', file=fp)\nfp.close()",hello world,
写一个打印1到10的for循环,,,,,,code,"for i in range(1,11): print(i)","1
2
3
4
5
6
7
8
9
10",
"写出下面代码的优化版本，提高运行效率x = list(range(500))
for item in x:
    t = 5**5
    print(item+t)",,,,,,code,"x = list(range(500))
t = 5**5
for item in x:
    print(item+t)",略（需你自己填标准输出）,
"写出下面代码的执行结果
def Join(List, sep=None):
    return (sep or ',').join(List)
print(Join(['a', 'b', 'c']))
print(Join(['a', 'b', 'c'],':'))",,,,,"a,b,c
a:b:c",concept,"a,b,c
a:b:c",,
"写出下面代码的运行结果
def Sum(a, b=3, c=5):
    return sum([a, b, c])
print(Sum(a=8, c=2))
print(Sum(8))
print(Sum(8, 2))",,,,,,concept,"13
16
15",,
编写函数，判断⼀个数字是否为素数，是则返回字符串YES，否则返回字符串NO,,,,,,code,,"def IsPrime(v):
    n = int(math.sqrt(v) + 1)
    for i in range(2, n):
        if v % i == 0:
            return 'No'
    else:
        return 'Yes'",
编写函数，模拟Python内置函数sorted()。,,,,,,code,,"def Sorted(v):
    t = v[::]
    r = []
    while t:
        tt = min(t)
        r.append(tt)
        t.remove(tt)
    return r",
请写⼀段Python代码实现删除⼀个list里面的重复元素,,,,,,code,,"l = [1,1,2,3,4,5,4]
list(set(l))","[1,2,3,4,5]"
__new__和__init__的区别是什么？,,,,,,concept,"__new__是类方法，负责创建实例并返回；
__init__是实例方法，负责初始化实例属性。重写__new__常用于单例模式或不可变对象定制。",,
深拷贝与浅拷贝的区别是什么？,,,,,,concept,"浅拷贝（copy.copy）仅复制对象外层引用，若对象包含可变元素（如嵌套列表），修改拷贝对象会影响原
对象。
深拷贝（copy.deepcopy）递归复制所有层级元素，完全独立于原对象。",,
什么是闭包？Python中如何实现？,,,,,,concept,闭包是嵌套函数捕获外层作用域变量的机制。例如计数器函数可通过闭包保留计数状态，而无需全局变量,,
Python迭代器是什么？什么场景用到迭代器？举一个例子,,,,,,concept,"在Python中，迭代器（Iterator）是⼀个可以迭代访问序列元素的对象。迭代器对象实现了两个⽅法：__iter__()
和__next__()。__iter__()⽅法返回迭代器对象本身，__next__()⽅法返回下⼀个元素。
迭代器常用于遍历序列、集合、字典等容器类型数据。它的优点是可以惰性计算（lazy evaluation），即只
有在需要时才会计算，避免了一次性加载所有数据的开销，同时也可以节省内存空间。
在Python中，使⽤迭代器通常有以下场景：
（1）遍历⼤量数据集合：当需要处理⼤量的数据集合时，使⽤迭代器可以避免⼀次性加载所有数据，
节省内存空间。
（2）实现自定义迭代器：当需要遍历自定义数据结构时，可以通过实现迭代器对象的__iter__()和
__next__()方法实现自定义迭代器；
（3）实现惰性计算：当需要进行惰性计算时，可以使用迭代器来实现，例如通过filter()、map()等高阶
函数返回一个迭代器对象来进行惰性计算。",,
Python生成器是什么？什么场景用到生成器？举一个例子？,,,,,,concept,"在Python中，⽣成器（Generator）是⼀种特殊的迭代器，它使⽤⽣成器函数来⽣成序列中的元素，⽽不是
在内存中⼀次性⽣成所有元素。
⽣成器函数是使⽤yield关键字定义的函数，每次调⽤⽣成器函数时，它会返回⼀个迭代器对象，调⽤next()
⽅法时，它会从上次暂停的位置继续执⾏，直到遇到下⼀个yield语句，然后返回⼀个值，并再次暂停。因
17
此，⽣成器可以惰性地⽣成序列中的元素，并在需要时逐个⽣成元素，避免了⼀次性⽣成所有元素所带来
的内存消耗。
使⽤⽣成器的场景包括：
（1）⽣成⼤量的数据集合：当需要⽣成⼤量数据时，使⽤⽣成器可以避免⼀次性占⽤⼤量内存空间；
（2）实现⾃定义的迭代器：当需要⾃定义迭代器对象时，可以使⽤⽣成器函数来实现，避免了繁琐的迭
代器对象的定义；
（3）实现惰性计算：当需要进⾏惰性计算时，可以使⽤⽣成器来实现，例如通过filter()、map()等⾼阶函
数返回⼀个⽣成器对象来进⾏惰性计算。",,
Python多线程与多进程的区别,,,,,,concept,"- **多线程**：指在同一个进程内开启多个线程，这些线程共享内存空间，适合执行 I/O 密集型任务（如文件读写、网络请求）。但由于全局解释器锁（GIL）的存在，Python 多线程无法实现真正的多核并行，只能在单核上切换线程。
- **多进程**：指同时运行多个进程，每个进程有自己独立的内存空间，可以实现真正的多核并行，适合 CPU 密集型任务（如计算密集型数据处理）。进程间通信需要借助IPC等机制，开销较线程大。",,
装饰器的实质是什么？,,,,,,concept,装饰器是要把原来的函数装饰成新的函数，并且返回这个函数本身的⾼阶函数,,
关于Python多线程和多进程，以下说法正确的是？,Python多线程受GIL影响，不能真正并行。,多进程可通过Queue等方式传递参数,多线程和多进程都能充分利用多核,以上A和B都对,D,choice,,,
Python是如何进⾏内存管理的,,,,,,concept,"•	Python采用自动内存管理机制，开发者无需手动分配和释放内存。
	•	主要通过内存池（如PyObject池）和垃圾回收（GC）机制管理内存。
	•	垃圾回收采用引用计数为主、结合分代回收算法，能够自动回收不再使用的对象。",,
Python⾥⾯如何拷贝⼀个对象？,使用copy模块的copy函数,直接赋值,copy.copy()实现浅拷贝，copy.deepcopy()实现深拷贝,以上A、B、C都对,D,choice,,,
Python⾥⾯search()和match()的区别？,search() 匹配整个字符串,match() 只能从字符串起始位置匹配,search() 可以在任意位置匹配子串,以上 B 和 C 正确,D,choice,,,
lambda表达式格式以及应⽤场景？,,,,,,concept,"lambda函数就是可以接受任意多个参数（包括可选参数）并且返回单个表达式值得函数。语法：lambda
[arg1 [,arg2, argn]]:expression
应⽤：
1）lambda函数⽐较轻便，即⽤即仍，适合完成只在⼀处使⽤的简单功能。
2）匿名函数，⼀般⽤来给filter，map这样的函数式编程服务
3）作为回调函数，传递给某些应⽤，⽐如消息处理。",,
*args和**kwarg作⽤,,,,,,concept,"*args代表位置参数，它会接收任意多个参数并把这些参数作为元组传递给函数。
**kwargs代表的关键字参数，允许你使⽤没有事先定义的参数名。位置参数⼀定要放在关键字参数的前
⾯。
作⽤：使⽤*args和**kwargs可以⾮常⽅便的定义函数，同时可以加强扩展性，以便⽇后的代码维护。",,